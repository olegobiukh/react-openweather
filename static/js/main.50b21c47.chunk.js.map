{"version":3,"sources":["App/components/Search.js","App/api.js","App/components/Current.js","App/components/Forecast.js","App/Weather.js","App/index.js","index.js"],"names":["Search","_ref","cityName","onInputChange","getweather","react_default","a","createElement","class","className","placeholder","type","name","id","value","onChange","autoComplete","onClick","api_key","getByCity","Object","asyncToGenerator","regenerator_default","mark","_callee","city","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","concat","sent","json","cod","abrupt","stop","apply","this","getForecastByCity","_ref2","_callee2","_args2","_context2","Current","Fragment","src","weather","icon","alt","description","Math","round","main","temp","wind","speed","humidity","pressure","Forecast","isLoaded","forecast","week","map","weekDay","date","Date","list","dt_txt","day","getDay","key","Weather","state","error","loadData","props","match","params","setState","_this$state","components_Current","components_Forecast","React","Component","App","isLoading","cityname","document","getElementById","_this","history","push","toLowerCase","components_Search","react_router","exact","path","component","rootElement","ReactDOM","render","react_router_dom","basename","process"],"mappings":"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","file":"static/js/main.50b21c47.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Search = ({ cityName, onInputChange, getweather }) => {\r\n  return (\r\n    <div class=\"Search\">\r\n      <input\r\n        className=\"Search__input\"\r\n        placeholder=\"Enter your city\"\r\n        type=\"text\"\r\n        name=\"cityname\"\r\n        id=\"cityname\"\r\n        value={cityName}\r\n        onChange={onInputChange}\r\n        autoComplete=\"off\"\r\n      />\r\n      <button className=\"Search__btn\" onClick={getweather}>\r\n        Get Weather\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","const api_key = \"8b4a1cfe7b37f251dcce8b232975fd6d\";\r\n\r\nexport const getByCity = async (city = \"\") => {\r\n  const response = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}`\r\n  );\r\n  const data = await response.json();\r\n  if (data.cod === \"404\") {\r\n    return null;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const getForecastByCity = async (city = \"\") => {\r\n  const response = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${api_key}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Current = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div className=\"Main border\">\r\n          <div className=\"Main__weather\">\r\n            <img\r\n              src={`http://openweathermap.org/img/w/${\r\n                data.weather[0].icon\r\n              }.png`}\r\n              className=\"Main__img\"\r\n              alt={data.weather[0].description}\r\n            />\r\n            <div className=\"Main__temperature\">\r\n              <h1>{Math.round(data.main.temp)}&#176;F</h1>\r\n\r\n              <div className=\"Main__info\">\r\n                <h2>More info:</h2>\r\n                <p>\"Speed\":{data.wind.speed}</p>\r\n                <p>\"Humidity\":{data.main.humidity}</p>\r\n                <p>\"Pressure\"{data.main.pressure}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Current;\r\n","import React from \"react\";\r\n\r\nconst Forecast = ({ isLoaded, forecast }) => {\r\n  const weekDays = [0, 8, 16, 24, 32];\r\n  const week = [\"Su\", \"M\", \"T\", \"W\", \"Th\", \"F\", \"Sa\"];\r\n  return (\r\n    <>\r\n      {forecast && (\r\n        <div className=\"Forecast border\">\r\n          <h2>Forecast</h2>\r\n          {weekDays.map(weekDay => {\r\n            const date = new Date(forecast.list[weekDay].dt_txt);\r\n            const day = week[date.getDay()];\r\n            return (\r\n              <div key={weekDay} className=\"Forecast__box\">\r\n                <p>{day}</p>\r\n                <img\r\n                  src={`http://openweathermap.org/img/w/${\r\n                    forecast.list[weekDay].weather[0].icon\r\n                  }.png`}\r\n                  alt={forecast.list[weekDay].weather[0].description}\r\n                />\r\n                <p>{Math.round(forecast.list[weekDay].main.temp)} F</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from \"react\";\r\n\r\nimport { getByCity, getForecastByCity } from \"./api.js\";\r\nimport Current from \"./components/Current\";\r\nimport Forecast from \"./components/Forecast\";\r\n\r\nclass Weather extends React.Component {\r\n  state = {\r\n    city: \"\",\r\n    data: null,\r\n    forecast: null,\r\n    error: true\r\n  };\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.loadData();\r\n  }\r\n\r\n  async loadData() {\r\n    const { city } = this.props.match.params;\r\n    let error = false;\r\n\r\n    if (city === this.state.city) {\r\n      return;\r\n    }\r\n\r\n    const data = await getByCity(city);\r\n    const forecast = await getForecastByCity(city);\r\n\r\n    if (!data) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      city,\r\n      data,\r\n      forecast,\r\n      error\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data, forecast, error } = this.state;\r\n    if (data) {\r\n      return (\r\n        <div className=\"Weather\">\r\n          <div className=\"Weather__title border\">\r\n            <h1>{data.name}</h1>\r\n          </div>\r\n          <Current data={data} />\r\n          <Forecast forecast={forecast} />\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      return <h2>Sorry, there is no such city</h2>;\r\n    } else {\r\n      return <h2>Loading</h2>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Search from \"./components/Search\";\nimport Weather from \"./Weather\";\n\nclass App extends React.Component {\n  state = {\n    data: null,\n    isLoading: false,\n    cityname: \"\"\n  };\n\n  getweather = () => {\n    const cityname = document.getElementById(\"cityname\").value;\n\n    const { history } = this.props;\n    history.push(cityname.toLowerCase());\n  };\n\n  render() {\n    const { cityName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"Catalog\">\n          <Search\n            cityname={cityName}\n            onInputChange={this.onInputChange}\n            getweather={this.getweather}\n          />\n          <Route exact path=\"/:city\" component={Weather} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Route component={App} />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}